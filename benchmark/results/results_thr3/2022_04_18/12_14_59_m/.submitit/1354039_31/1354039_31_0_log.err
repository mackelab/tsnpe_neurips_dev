/home/macke/mdeistler57/.conda/envs/tsnpe/lib/python3.8/site-packages/sbibm/tasks/slcp/task.py:84: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matricesor `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at  ../aten/src/ATen/native/TensorShape.cpp:2318.)
  m = torch.stack(
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]/home/macke/mdeistler57/.conda/envs/tsnpe/lib/python3.8/site-packages/nflows/transforms/lu.py:80: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at  ../aten/src/ATen/native/BatchLinearAlgebra.cpp:1672.)
  outputs, _ = torch.triangular_solve(
Drawing 100000 posterior samples:   9%|▉         | 8815/100000 [00:00<00:01, 67862.02it/s]Drawing 100000 posterior samples:  18%|█▊        | 17719/100000 [00:00<00:01, 77488.85it/s]Drawing 100000 posterior samples:  35%|███▌      | 35426/100000 [00:00<00:00, 95305.20it/s]Drawing 100000 posterior samples:  53%|█████▎    | 53065/100000 [00:00<00:00, 101911.85it/s]Drawing 100000 posterior samples:  71%|███████   | 70709/100000 [00:00<00:00, 99651.08it/s] Drawing 100000 posterior samples:  88%|████████▊ | 88400/100000 [00:00<00:00, 103197.50it/s]Drawing 100000 posterior samples: 101405it [00:01, 105760.39it/s]                           Drawing 100000 posterior samples: 101405it [00:01, 100129.41it/s]
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  19%|█▊        | 18606/100000 [00:00<00:00, 127897.50it/s]Drawing 100000 posterior samples:  37%|███▋      | 37282/100000 [00:00<00:00, 145945.32it/s]Drawing 100000 posterior samples:  56%|█████▌    | 55989/100000 [00:00<00:00, 154648.70it/s]Drawing 100000 posterior samples:  75%|███████▍  | 74662/100000 [00:00<00:00, 159091.12it/s]Drawing 100000 posterior samples:  93%|█████████▎| 93289/100000 [00:00<00:00, 161767.15it/s]Drawing 100000 posterior samples: 102584it [00:00, 157033.38it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  19%|█▉        | 19315/100000 [00:00<00:00, 143547.90it/s]Drawing 100000 posterior samples:  39%|███▊      | 38675/100000 [00:00<00:00, 157415.29it/s]Drawing 100000 posterior samples:  58%|█████▊    | 57998/100000 [00:00<00:00, 162578.62it/s]Drawing 100000 posterior samples:  77%|███████▋  | 77342/100000 [00:00<00:00, 164982.42it/s]Drawing 100000 posterior samples:  97%|█████████▋| 96687/100000 [00:00<00:00, 166402.61it/s]Drawing 100000 posterior samples: 101660it [00:00, 161983.15it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  19%|█▉        | 19188/100000 [00:00<00:00, 167697.70it/s]Drawing 100000 posterior samples:  38%|███▊      | 38343/100000 [00:00<00:00, 167858.27it/s]Drawing 100000 posterior samples:  58%|█████▊    | 57573/100000 [00:00<00:00, 168901.51it/s]Drawing 100000 posterior samples:  77%|███████▋  | 76741/100000 [00:00<00:00, 168982.28it/s]Drawing 100000 posterior samples:  96%|█████████▌| 95934/100000 [00:00<00:00, 168847.26it/s]Drawing 100000 posterior samples: 102011it [00:00, 167565.12it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  20%|█▉        | 19578/100000 [00:00<00:00, 168404.56it/s]Drawing 100000 posterior samples:  39%|███▉      | 39137/100000 [00:00<00:00, 168973.97it/s]Drawing 100000 posterior samples:  59%|█████▊    | 58694/100000 [00:00<00:00, 169734.45it/s]Drawing 100000 posterior samples:  78%|███████▊  | 78264/100000 [00:00<00:00, 170207.53it/s]Drawing 100000 posterior samples:  98%|█████████▊| 97800/100000 [00:00<00:00, 170357.05it/s]Drawing 100000 posterior samples: 101111it [00:00, 167080.91it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  19%|█▉        | 19428/100000 [00:00<00:00, 176274.49it/s]Drawing 100000 posterior samples:  39%|███▉      | 38865/100000 [00:00<00:00, 176850.24it/s]Drawing 100000 posterior samples:  58%|█████▊    | 58339/100000 [00:00<00:00, 177223.70it/s]Drawing 100000 posterior samples:  78%|███████▊  | 77789/100000 [00:00<00:00, 177467.63it/s]Drawing 100000 posterior samples:  97%|█████████▋| 97242/100000 [00:00<00:00, 177737.95it/s]Drawing 100000 posterior samples: 101375it [00:00, 174695.32it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  19%|█▉        | 19432/100000 [00:00<00:00, 178429.05it/s]Drawing 100000 posterior samples:  39%|███▉      | 38806/100000 [00:00<00:00, 169600.53it/s]Drawing 100000 posterior samples:  58%|█████▊    | 58174/100000 [00:00<00:00, 164382.44it/s]Drawing 100000 posterior samples:  78%|███████▊  | 77672/100000 [00:00<00:00, 162176.77it/s]Drawing 100000 posterior samples:  97%|█████████▋| 97107/100000 [00:00<00:00, 160909.97it/s]Drawing 100000 posterior samples: 101455it [00:00, 160829.97it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  19%|█▉        | 19471/100000 [00:00<00:00, 165349.54it/s]Drawing 100000 posterior samples:  39%|███▉      | 38914/100000 [00:00<00:00, 169833.95it/s]Drawing 100000 posterior samples:  58%|█████▊    | 58343/100000 [00:00<00:00, 172609.34it/s]Drawing 100000 posterior samples:  78%|███████▊  | 77810/100000 [00:00<00:00, 173682.43it/s]Drawing 100000 posterior samples:  97%|█████████▋| 97184/100000 [00:00<00:00, 167174.60it/s]Drawing 100000 posterior samples: 101407it [00:00, 165915.60it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  20%|█▉        | 19579/100000 [00:00<00:00, 154038.58it/s]Drawing 100000 posterior samples:  39%|███▉      | 39131/100000 [00:00<00:00, 147912.71it/s]Drawing 100000 posterior samples:  59%|█████▊    | 58705/100000 [00:00<00:00, 142269.05it/s]Drawing 100000 posterior samples:  78%|███████▊  | 78277/100000 [00:00<00:00, 140763.62it/s]Drawing 100000 posterior samples:  98%|█████████▊| 97827/100000 [00:00<00:00, 142364.45it/s]Drawing 100000 posterior samples: 101092it [00:00, 141529.29it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  19%|█▉        | 19305/100000 [00:00<00:00, 168919.46it/s]Drawing 100000 posterior samples:  39%|███▊      | 38598/100000 [00:00<00:00, 170009.54it/s]Drawing 100000 posterior samples:  58%|█████▊    | 57855/100000 [00:00<00:00, 170696.87it/s]Drawing 100000 posterior samples:  77%|███████▋  | 77150/100000 [00:00<00:00, 170352.14it/s]Drawing 100000 posterior samples:  96%|█████████▋| 96488/100000 [00:00<00:00, 159481.06it/s]Drawing 100000 posterior samples: 101742it [00:00, 160590.34it/s]                           
Drawing 10000 posterior samples:   0%|          | 0/10000 [00:00<?, ?it/s]Drawing 10000 posterior samples: 10167it [00:00, 128972.95it/s]           
run.py:212: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  acceptance_rates = torch.tensor(get_tensor_from_csv(path_acceptance_rate))  # noqa
run.py:215: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  gt_acceptances = torch.tensor(get_tensor_from_csv(path_gt_acceptance))  # noqa
