/home/macke/mdeistler57/.conda/envs/tsnpe/lib/python3.8/site-packages/sbibm/tasks/slcp/task.py:84: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matricesor `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at  ../aten/src/ATen/native/TensorShape.cpp:2318.)
  m = torch.stack(
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]/home/macke/mdeistler57/.conda/envs/tsnpe/lib/python3.8/site-packages/nflows/transforms/lu.py:80: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at  ../aten/src/ATen/native/BatchLinearAlgebra.cpp:1672.)
  outputs, _ = torch.triangular_solve(
Drawing 100000 posterior samples:   9%|▉         | 8755/100000 [00:00<00:01, 82017.52it/s]Drawing 100000 posterior samples:  26%|██▋       | 26293/100000 [00:00<00:00, 95069.45it/s]Drawing 100000 posterior samples:  44%|████▍     | 43850/100000 [00:00<00:00, 97012.33it/s]Drawing 100000 posterior samples:  61%|██████▏   | 61397/100000 [00:00<00:00, 100297.57it/s]Drawing 100000 posterior samples:  79%|███████▉  | 78955/100000 [00:00<00:00, 99808.76it/s] Drawing 100000 posterior samples:  97%|█████████▋| 96509/100000 [00:00<00:00, 101707.43it/s]Drawing 100000 posterior samples: 101741it [00:01, 100096.14it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  17%|█▋        | 17369/100000 [00:00<00:00, 142654.07it/s]Drawing 100000 posterior samples:  35%|███▍      | 34872/100000 [00:00<00:00, 137817.86it/s]Drawing 100000 posterior samples:  52%|█████▏    | 52329/100000 [00:00<00:00, 139673.78it/s]Drawing 100000 posterior samples:  70%|██████▉   | 69743/100000 [00:00<00:00, 138955.39it/s]Drawing 100000 posterior samples:  87%|████████▋ | 87148/100000 [00:00<00:00, 143773.37it/s]Drawing 100000 posterior samples: 102019it [00:00, 144910.42it/s]                           Drawing 100000 posterior samples: 102019it [00:00, 142464.13it/s]
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  10%|▉         | 9862/100000 [00:00<00:01, 66785.86it/s]Drawing 100000 posterior samples:  30%|██▉       | 29553/100000 [00:00<00:00, 119633.52it/s]Drawing 100000 posterior samples:  49%|████▉     | 49251/100000 [00:00<00:00, 143309.00it/s]Drawing 100000 posterior samples:  69%|██████▉   | 68912/100000 [00:00<00:00, 152566.81it/s]Drawing 100000 posterior samples:  89%|████████▊ | 88611/100000 [00:00<00:00, 156162.34it/s]Drawing 100000 posterior samples: 100777it [00:00, 144793.08it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  20%|█▉        | 19628/100000 [00:00<00:00, 173432.12it/s]Drawing 100000 posterior samples:  39%|███▉      | 39263/100000 [00:00<00:00, 176113.15it/s]Drawing 100000 posterior samples:  59%|█████▉    | 58903/100000 [00:00<00:00, 161955.58it/s]Drawing 100000 posterior samples:  79%|███████▊  | 78542/100000 [00:00<00:00, 160743.58it/s]Drawing 100000 posterior samples:  98%|█████████▊| 98148/100000 [00:00<00:00, 166719.70it/s]Drawing 100000 posterior samples: 100928it [00:00, 163551.02it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  20%|█▉        | 19697/100000 [00:00<00:00, 138450.02it/s]Drawing 100000 posterior samples:  39%|███▉      | 39392/100000 [00:00<00:00, 152984.23it/s]Drawing 100000 posterior samples:  59%|█████▉    | 59095/100000 [00:00<00:00, 158297.88it/s]Drawing 100000 posterior samples:  79%|███████▉  | 78782/100000 [00:00<00:00, 166285.82it/s]Drawing 100000 posterior samples:  98%|█████████▊| 98468/100000 [00:00<00:00, 168316.60it/s]Drawing 100000 posterior samples: 100765it [00:00, 159425.31it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  20%|█▉        | 19716/100000 [00:00<00:00, 158382.93it/s]Drawing 100000 posterior samples:  39%|███▉      | 39413/100000 [00:00<00:00, 167124.38it/s]Drawing 100000 posterior samples:  59%|█████▉    | 59123/100000 [00:00<00:00, 172526.09it/s]Drawing 100000 posterior samples:  79%|███████▉  | 78828/100000 [00:00<00:00, 170467.28it/s]Drawing 100000 posterior samples:  99%|█████████▊| 98527/100000 [00:00<00:00, 167776.67it/s]Drawing 100000 posterior samples: 100733it [00:00, 165152.10it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  20%|█▉        | 19665/100000 [00:00<00:00, 153613.04it/s]Drawing 100000 posterior samples:  39%|███▉      | 39372/100000 [00:00<00:00, 156328.57it/s]Drawing 100000 posterior samples:  59%|█████▉    | 59058/100000 [00:00<00:00, 164506.72it/s]Drawing 100000 posterior samples:  79%|███████▊  | 78730/100000 [00:00<00:00, 170005.00it/s]Drawing 100000 posterior samples:  98%|█████████▊| 98424/100000 [00:00<00:00, 166153.06it/s]Drawing 100000 posterior samples: 100780it [00:00, 160570.48it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  20%|█▉        | 19632/100000 [00:00<00:00, 176826.03it/s]Drawing 100000 posterior samples:  39%|███▉      | 39241/100000 [00:00<00:00, 174419.81it/s]Drawing 100000 posterior samples:  59%|█████▉    | 58882/100000 [00:00<00:00, 166104.22it/s]Drawing 100000 posterior samples:  79%|███████▊  | 78514/100000 [00:00<00:00, 169297.66it/s]Drawing 100000 posterior samples:  98%|█████████▊| 98152/100000 [00:00<00:00, 165395.40it/s]Drawing 100000 posterior samples: 100925it [00:00, 163612.41it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  20%|█▉        | 19674/100000 [00:00<00:00, 160647.93it/s]Drawing 100000 posterior samples:  39%|███▉      | 39346/100000 [00:00<00:00, 170980.25it/s]Drawing 100000 posterior samples:  59%|█████▉    | 59019/100000 [00:00<00:00, 173499.80it/s]Drawing 100000 posterior samples:  79%|███████▊  | 78699/100000 [00:00<00:00, 167220.04it/s]Drawing 100000 posterior samples:  98%|█████████▊| 98376/100000 [00:00<00:00, 169793.26it/s]Drawing 100000 posterior samples: 100815it [00:00, 165341.67it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  20%|█▉        | 19657/100000 [00:00<00:00, 152617.41it/s]Drawing 100000 posterior samples:  39%|███▉      | 39308/100000 [00:00<00:00, 164106.68it/s]Drawing 100000 posterior samples:  59%|█████▉    | 58984/100000 [00:00<00:00, 163045.73it/s]Drawing 100000 posterior samples:  79%|███████▊  | 78624/100000 [00:00<00:00, 159983.24it/s]Drawing 100000 posterior samples:  98%|█████████▊| 98295/100000 [00:00<00:00, 163841.71it/s]Drawing 100000 posterior samples: 100835it [00:00, 159313.83it/s]                           
Drawing 10000 posterior samples:   0%|          | 0/10000 [00:00<?, ?it/s]Drawing 10000 posterior samples: 10080it [00:00, 139978.63it/s]           
run.py:212: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  acceptance_rates = torch.tensor(get_tensor_from_csv(path_acceptance_rate))  # noqa
run.py:215: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  gt_acceptances = torch.tensor(get_tensor_from_csv(path_gt_acceptance))  # noqa
