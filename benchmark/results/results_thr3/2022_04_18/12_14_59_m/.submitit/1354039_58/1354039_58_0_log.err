/home/macke/mdeistler57/.conda/envs/tsnpe/lib/python3.8/site-packages/sbibm/tasks/slcp/task.py:84: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matricesor `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at  ../aten/src/ATen/native/TensorShape.cpp:2318.)
  m = torch.stack(
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]/home/macke/mdeistler57/.conda/envs/tsnpe/lib/python3.8/site-packages/nflows/transforms/lu.py:80: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at  ../aten/src/ATen/native/BatchLinearAlgebra.cpp:1672.)
  outputs, _ = torch.triangular_solve(
Drawing 100000 posterior samples:  17%|█▋        | 17159/100000 [00:00<00:00, 96039.09it/s]Drawing 100000 posterior samples:  34%|███▍      | 34194/100000 [00:00<00:00, 101249.87it/s]Drawing 100000 posterior samples:  51%|█████     | 51240/100000 [00:00<00:00, 99239.66it/s] Drawing 100000 posterior samples:  68%|██████▊   | 68355/100000 [00:00<00:00, 99746.91it/s]Drawing 100000 posterior samples:  85%|████████▌ | 85366/100000 [00:00<00:00, 99813.56it/s]Drawing 100000 posterior samples: 102380it [00:01, 101776.63it/s]                          Drawing 100000 posterior samples: 102380it [00:01, 100559.28it/s]
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  17%|█▋        | 17108/100000 [00:00<00:00, 147575.65it/s]Drawing 100000 posterior samples:  34%|███▍      | 34258/100000 [00:00<00:00, 142312.65it/s]Drawing 100000 posterior samples:  51%|█████▏    | 51321/100000 [00:00<00:00, 143529.73it/s]Drawing 100000 posterior samples:  68%|██████▊   | 68370/100000 [00:00<00:00, 147867.16it/s]Drawing 100000 posterior samples:  85%|████████▌ | 85410/100000 [00:00<00:00, 147098.64it/s]Drawing 100000 posterior samples: 102432it [00:00, 139191.35it/s]                           Drawing 100000 posterior samples: 102432it [00:00, 142324.54it/s]
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  19%|█▉        | 19335/100000 [00:00<00:00, 147792.80it/s]Drawing 100000 posterior samples:  39%|███▊      | 38693/100000 [00:00<00:00, 163524.62it/s]Drawing 100000 posterior samples:  58%|█████▊    | 58045/100000 [00:00<00:00, 164298.34it/s]Drawing 100000 posterior samples:  77%|███████▋  | 77396/100000 [00:00<00:00, 161395.11it/s]Drawing 100000 posterior samples:  97%|█████████▋| 96796/100000 [00:00<00:00, 162043.30it/s]Drawing 100000 posterior samples: 101604it [00:00, 159273.91it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  19%|█▉        | 19338/100000 [00:00<00:00, 170072.51it/s]Drawing 100000 posterior samples:  39%|███▊      | 38669/100000 [00:00<00:00, 159936.09it/s]Drawing 100000 posterior samples:  58%|█████▊    | 57935/100000 [00:00<00:00, 165830.04it/s]Drawing 100000 posterior samples:  77%|███████▋  | 77207/100000 [00:00<00:00, 170237.41it/s]Drawing 100000 posterior samples:  97%|█████████▋| 96518/100000 [00:00<00:00, 166449.90it/s]Drawing 100000 posterior samples: 101742it [00:00, 163639.28it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  20%|█▉        | 19567/100000 [00:00<00:00, 177703.27it/s]Drawing 100000 posterior samples:  39%|███▉      | 39149/100000 [00:00<00:00, 157706.23it/s]Drawing 100000 posterior samples:  59%|█████▊    | 58715/100000 [00:00<00:00, 159717.69it/s]Drawing 100000 posterior samples:  78%|███████▊  | 78253/100000 [00:00<00:00, 163120.87it/s]Drawing 100000 posterior samples:  98%|█████████▊| 97792/100000 [00:00<00:00, 167935.21it/s]Drawing 100000 posterior samples: 101090it [00:00, 163233.78it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  19%|█▉        | 19344/100000 [00:00<00:00, 135084.32it/s]Drawing 100000 posterior samples:  39%|███▊      | 38659/100000 [00:00<00:00, 149284.12it/s]Drawing 100000 posterior samples:  58%|█████▊    | 57995/100000 [00:00<00:00, 149130.34it/s]Drawing 100000 posterior samples:  77%|███████▋  | 77329/100000 [00:00<00:00, 155268.09it/s]Drawing 100000 posterior samples:  97%|█████████▋| 96697/100000 [00:00<00:00, 162229.63it/s]Drawing 100000 posterior samples: 101655it [00:00, 154295.60it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  19%|█▉        | 19317/100000 [00:00<00:00, 159032.57it/s]Drawing 100000 posterior samples:  39%|███▊      | 38681/100000 [00:00<00:00, 159091.01it/s]Drawing 100000 posterior samples:  58%|█████▊    | 58018/100000 [00:00<00:00, 156540.18it/s]Drawing 100000 posterior samples:  77%|███████▋  | 77382/100000 [00:00<00:00, 157099.53it/s]Drawing 100000 posterior samples:  97%|█████████▋| 96716/100000 [00:00<00:00, 157733.86it/s]Drawing 100000 posterior samples: 101635it [00:00, 155946.18it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  19%|█▉        | 19476/100000 [00:00<00:00, 164479.86it/s]Drawing 100000 posterior samples:  39%|███▉      | 38980/100000 [00:00<00:00, 170184.48it/s]Drawing 100000 posterior samples:  58%|█████▊    | 58459/100000 [00:00<00:00, 174219.18it/s]Drawing 100000 posterior samples:  78%|███████▊  | 77907/100000 [00:00<00:00, 172400.64it/s]Drawing 100000 posterior samples:  97%|█████████▋| 97391/100000 [00:00<00:00, 165478.87it/s]Drawing 100000 posterior samples: 101288it [00:00, 165975.35it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  19%|█▉        | 19254/100000 [00:00<00:00, 154266.21it/s]Drawing 100000 posterior samples:  39%|███▊      | 38509/100000 [00:00<00:00, 157293.12it/s]Drawing 100000 posterior samples:  58%|█████▊    | 57838/100000 [00:00<00:00, 159746.74it/s]Drawing 100000 posterior samples:  77%|███████▋  | 77168/100000 [00:00<00:00, 161026.99it/s]Drawing 100000 posterior samples:  96%|█████████▋| 96399/100000 [00:00<00:00, 160089.32it/s]Drawing 100000 posterior samples: 101801it [00:00, 158967.57it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  19%|█▉        | 19374/100000 [00:00<00:00, 178295.01it/s]Drawing 100000 posterior samples:  39%|███▉      | 38766/100000 [00:00<00:00, 175171.18it/s]Drawing 100000 posterior samples:  58%|█████▊    | 58125/100000 [00:00<00:00, 174373.43it/s]Drawing 100000 posterior samples:  77%|███████▋  | 77461/100000 [00:00<00:00, 175806.60it/s]Drawing 100000 posterior samples:  97%|█████████▋| 96856/100000 [00:00<00:00, 174165.24it/s]Drawing 100000 posterior samples: 101577it [00:00, 171679.91it/s]                           
Drawing 10000 posterior samples:   0%|          | 0/10000 [00:00<?, ?it/s]Drawing 10000 posterior samples: 10142it [00:00, 140375.31it/s]           
run.py:212: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  acceptance_rates = torch.tensor(get_tensor_from_csv(path_acceptance_rate))  # noqa
run.py:215: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  gt_acceptances = torch.tensor(get_tensor_from_csv(path_gt_acceptance))  # noqa
