Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]/home/macke/mdeistler57/.conda/envs/tsnpe/lib/python3.8/site-packages/nflows/transforms/lu.py:80: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at  ../aten/src/ATen/native/BatchLinearAlgebra.cpp:1672.)
  outputs, _ = torch.triangular_solve(
Drawing 100000 posterior samples:  19%|█▉        | 18779/100000 [00:00<00:00, 162244.49it/s]Drawing 100000 posterior samples:  38%|███▊      | 37576/100000 [00:00<00:00, 175239.55it/s]Drawing 100000 posterior samples:  56%|█████▋    | 56345/100000 [00:00<00:00, 180366.58it/s]Drawing 100000 posterior samples:  75%|███████▌  | 75137/100000 [00:00<00:00, 182879.21it/s]Drawing 100000 posterior samples:  94%|█████████▍| 93894/100000 [00:00<00:00, 183802.56it/s]Drawing 100000 posterior samples: 103066it [00:00, 183750.34it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  36%|███▌      | 36093/100000 [00:00<00:00, 277170.56it/s]Drawing 100000 posterior samples:  72%|███████▏  | 72191/100000 [00:00<00:00, 283008.73it/s]Drawing 100000 posterior samples: 100376it [00:00, 274522.70it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  38%|███▊      | 37706/100000 [00:00<00:00, 292497.95it/s]Drawing 100000 posterior samples:  76%|███████▌  | 75509/100000 [00:00<00:00, 295717.03it/s]Drawing 100000 posterior samples: 102800it [00:00, 294075.75it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  28%|██▊       | 28474/100000 [00:00<00:00, 265799.75it/s]Drawing 100000 posterior samples:  57%|█████▋    | 56987/100000 [00:00<00:00, 256485.69it/s]Drawing 100000 posterior samples:  86%|████████▌ | 85515/100000 [00:00<00:00, 266966.12it/s]Drawing 100000 posterior samples: 102516it [00:00, 266858.86it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:   9%|▉         | 9451/100000 [00:00<00:01, 65291.61it/s]Drawing 100000 posterior samples:  38%|███▊      | 37710/100000 [00:00<00:00, 148760.04it/s]Drawing 100000 posterior samples:  66%|██████▌   | 65966/100000 [00:00<00:00, 177316.85it/s]Drawing 100000 posterior samples:  94%|█████████▍| 94264/100000 [00:00<00:00, 191667.18it/s]Drawing 100000 posterior samples: 102857it [00:00, 176168.91it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  29%|██▊       | 28719/100000 [00:00<00:00, 222838.86it/s]Drawing 100000 posterior samples:  67%|██████▋   | 67008/100000 [00:00<00:00, 258715.70it/s]Drawing 100000 posterior samples:  96%|█████████▌| 95746/100000 [00:00<00:00, 263555.19it/s]Drawing 100000 posterior samples: 102115it [00:00, 257797.46it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  29%|██▊       | 28705/100000 [00:00<00:00, 271435.13it/s]Drawing 100000 posterior samples:  67%|██████▋   | 66936/100000 [00:00<00:00, 287545.63it/s]Drawing 100000 posterior samples: 102211it [00:00, 271707.82it/s]                           Drawing 100000 posterior samples: 102211it [00:00, 273900.42it/s]
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  28%|██▊       | 28445/100000 [00:00<00:00, 230257.01it/s]Drawing 100000 posterior samples:  57%|█████▋    | 56794/100000 [00:00<00:00, 257484.97it/s]Drawing 100000 posterior samples:  85%|████████▌ | 85182/100000 [00:00<00:00, 246894.30it/s]Drawing 100000 posterior samples: 102650it [00:00, 248598.67it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  28%|██▊       | 28043/100000 [00:00<00:00, 236696.47it/s]Drawing 100000 posterior samples:  66%|██████▌   | 65516/100000 [00:00<00:00, 262746.68it/s]Drawing 100000 posterior samples:  94%|█████████▎| 93630/100000 [00:00<00:00, 248579.56it/s]Drawing 100000 posterior samples: 102977it [00:00, 251715.49it/s]                           
Drawing 100000 posterior samples:   0%|          | 0/100000 [00:00<?, ?it/s]Drawing 100000 posterior samples:  39%|███▊      | 38738/100000 [00:00<00:00, 299137.54it/s]Drawing 100000 posterior samples:  77%|███████▋  | 77463/100000 [00:00<00:00, 288271.23it/s]Drawing 100000 posterior samples: 101581it [00:00, 278550.83it/s]                           
Drawing 10000 posterior samples:   0%|          | 0/10000 [00:00<?, ?it/s]Drawing 10000 posterior samples: 10169it [00:00, 208812.72it/s]           
run.py:212: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  acceptance_rates = torch.tensor(get_tensor_from_csv(path_acceptance_rate))  # noqa
run.py:215: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  gt_acceptances = torch.tensor(get_tensor_from_csv(path_gt_acceptance))  # noqa
